             DATA TYPES IN MONGODB

1) Text                                    "Some text"
2) Boolean                                 true/ false
3) Number                          ------> 55              NumberInt(int32)        
                                     |---> 10000000000000  NumberLong(int64)
                                     |---> 12.39           NumberDecimal
4) ObjectId                                ObjectId("asdfa")
5) ISODate                                 ISODate("2019-10-19")
6) Embedded document                       { "a": {....}}
7) Array                                   { "b": [....]}

# Number stored in mongodb must be 64 bit long (it is the maximum limit)

=> typeof command
E.g : typeof db.numbers.findOne({}).a                    (becoz findOne gives an object {a:1})
result:   number

=> NumberInt creates a int32 value => NumberInt(55)
   NumberLong creates a int64 value => NumberLong(7489729384792)
   
   If you just use a number (e.g. insertOne({a: 1}), this will get added as a normal double into the database.
   The reason for this is that the shell is based on JS which only knows float/ double values and doesn't differ between integers and floats.

   NumberDecimal creates a high-precision double value => NumberDecimal("12.99") => This can be helpful for
   cases where you need (many) exact decimal places for calculations.

==============>                            Embedded document vs References
Use Embedded document when there exists a strong "one to one" relationship