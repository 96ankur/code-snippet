
// _id: 5bf19f094b8cb42900311209


// 12 bytes
    // 4 bytes: timestamp
    // 3 bytes: machine identifier
    // 2 bytes: process identifier
    // 3 bytes: counter


    // 1 byte = 8bits
    // 2 ^ 8 =256
    // 2 ^ 24 = 16M

    /**
     * If we create 
     * at the same time
     * on the same machine
     * by the same process
     * more than 16 million documents then there may be
     * two documents with same object Id
     * 
     *  HENCE OBJECT_ID IS NOT COMPLETELY UNIQUE
     * 
     * In mongodb this unique id is generated by driver not by mongodb itself, that means we don't
     * have to wait for mongodb to generate a unique identifier and thats why application build on mongodb
     * are highly scaleable.
     * 
     * In an express application we use mongoose which works over DRIVER and mongoose talks to driver
     * to generate a new Id
     */

const mongoose = require('mongoose');
const id =new mongoose.Types.ObjectId();

console.log(id);
console.log(id.getTimestamp());

const isValid = mongoose.Types.ObjectId.isValid('1234');
console.log(isValid);
